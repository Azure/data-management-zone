name: Data Hub Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'code/GeneratePassword.ps1'
      - 'infra/AutomationAccount/**'
      - 'infra/ContainerRegistry/**'
      - 'infra/DataFactory/**'
      - 'infra/IntegrationServiceEnvironment/**'
      - 'infra/KeyVault/**'
      - 'infra/LogAnalytics/**'
      - 'infra/LogicApp/**'
      - 'infra/PowerBi/**'
      - 'infra/Purview/**'
      - 'infra/SelfHostedIntegrationRuntime/**'
      - 'infra/Storage/**'
      - '.github/workflows/dataHubDeployment.yml'

env:
  AZURE_SUBSCRIPTION_ID: '4060c03e-0d2e-44b7-82a3-da9376fe50b2'
  AZURE_RESOURCE_GROUP_NAME_AUTOMATION: dh-automation
  AZURE_RESOURCE_GROUP_NAME_MANAGEMENT: dh-mgmt
  AZURE_RESOURCE_GROUP_NAME_INTEGRATION: dh-integration
  AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS: dh-logging
  AZURE_RESOURCE_GROUP_NAME_CONSUMPTION: dh-consumption
  AZURE_RESOURCE_GROUP_NAME_CONTAINER: dh-container
  AZURE_RESOURCE_GROUP_NAME_GOVERNANCE: dh-governance
  AZURE_LOCATION: northeurope

jobs:
  create-resource-group:
    runs-on: ubuntu-latest

    steps:
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_automation
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_integration
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_management
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_MANAGEMENT }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_MANAGEMENT }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_loganalytics
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_consumption
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_container
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_CONTAINER }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_CONTAINER }}
    
    # Create resource group
    - name: Create resource group
      id: resource_group_governance
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          echo "Creating resource group \"${{ env.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}\""
          az group create --location ${{ env.AZURE_LOCATION }} --name ${{ env.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout

  validation:
    needs: [ create-resource-group ]
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Deploy Key Vault 001 - validation
    - name: Deploy Key Vault 001 - validation
      id: key_vault_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_MANAGEMENT }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault001.json
        deploymentMode: Validate
    
    # Deploy Key Vault 002 - validation
    - name: Deploy Key Vault 002 - validation
      id: key_vault_002_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault002.json
        deploymentMode: Validate
    
    # Deploy Key Vault 003 - validation
    - name: Deploy Key Vault 003 - validation
      id: key_vault_003_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault003.json
        deploymentMode: Validate
    
    # Deploy Integration Service Environment 001 - validation
    - name: Deploy Integration Service Environment 001 - validation
      id: integration_service_environment_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/IntegrationServiceEnvironment/deploy.integrationServiceEnvironment.json
        parameters: ${{ github.workspace }}/infra/IntegrationServiceEnvironment/params.integrationServiceEnvironment001.json
        deploymentMode: Validate
    
    # Deploy Logic App 001 - validation
    - name: Deploy Logic App 001 - validation
      id: logic_app_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/LogicApp/deploy.logicApp.json
        parameters: ${{ github.workspace }}/infra/LogicApp/params.logicApp001.json
        deploymentMode: Validate
    
    # Deploy Automation Account 001 - validation
    - name: Deploy Automation Account 001 - validation
      id: automation_account_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/AutomationAccount/deploy.automationAccount.json
        parameters: ${{ github.workspace }}/infra/AutomationAccount/params.automationAccount001.json
        deploymentMode: Validate
    
    # Deploy Purview 001 - validation
    - name: Deploy Purview 001 - validation
      id: purview_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Purview/deploy.purview.json
        parameters: ${{ github.workspace }}/infra/Purview/params.purview001.json
        deploymentMode: Validate
    
    # Deploy Log Analytics Workspace 001 - validation
    - name: Deploy Log Analytics Workspace 001 - validation
      id: log_analytics_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS }}
        region: ${{ env.AZURE_LOCATION }}
        template:  ${{ github.workspace }}/infra/LogAnalytics/deploy.logAnalytics.json
        parameters: ${{ github.workspace }}/infra/LogAnalytics/params.logAnalytics001.json
        deploymentMode: Validate
    
    # Deploy Storage Account 001 - validation
    - name: Deploy Storage Account 001 - validation
      id: storage_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Storage/deploy.storage.json
        parameters: ${{ github.workspace }}/infra/Storage/params.storage001.json
        deploymentMode: Validate
    
    # Deploy Data Factory 001 - validation
    - name: Deploy Data Factory 001 - validation
      id: data_factory_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/DataFactory/deploy.dataFactory.json
        parameters: ${{ github.workspace }}/infra/DataFactory/params.dataFactory001.json
        deploymentMode: Validate
    
    # Deploy Container Registry 001 - validation
    - name: Deploy Container Registry  001 - validation
      id: container_registry_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_CONTAINER }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/ContainerRegistry/deploy.containerRegistry.json
        parameters: ${{ github.workspace }}/infra/ContainerRegistry/params.containerRegistry001.json
        deploymentMode: Validate
    
    # Deploy Synapse Private Link Hub 001 - validation
    - name: Deploy Synapse Private Link Hub 001 - validation
      id: synapse_private_link_hub_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SynapsePrivateLinkHub/deploy.synapsePrivateLinkHub.json
        parameters: ${{ github.workspace }}/infra/SynapsePrivateLinkHub/params.synapsePrivateLinkHub.json
        deploymentMode: Validate
    
    # Generate Password
    - name: Generate Password
      id: generate_password_001
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy SHIR 001 - validation
    - name: Deploy SHIR 001 - validation
      id: shir_001_validation
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SelfHostedIntegrationRuntime/deploy.shir.json
        parameters: ${{ github.workspace }}/infra/SelfHostedIntegrationRuntime/params.shir001.json vmssAdminPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Validate
    
    # # Deploy Function 001 - validation
    # - name: Deploy Function 001 - validation
    #   id: function_001_validation
    #   uses: azure/arm-deploy@v1
    #   with:
    #     scope: resourcegroup
    #     subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_MANAGEMENT }}
    #     region: ${{ env.AZURE_LOCATION }}
    #     template: ${{ github.workspace }}/infra/Function/deploy.function.json
    #     parameters: ${{ github.workspace }}/infra/Function/params.function001.json
    #     deploymentMode: Validate
    
    # # Deploy Power BI Private Link 001 - validation
    # - name: Deploy Power BI Private Link 001 - validation
    #   id: power_bi_pl_001_validation
    #   uses: azure/arm-deploy@v1
    #   with:
    #     scope: resourcegroup
    #     subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
    #     region: ${{ env.AZURE_LOCATION }}
    #     template: ${{ github.workspace }}/infra/PowerBi/deploy.powerBi.json
    #     parameters: ${{ github.workspace }}/infra/PowerBi/params.powerBi001.json
    #     deploymentMode: Validate
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout

  deployment:
    needs: [ create-resource-group, validation ]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check Out Repository
      id: checkout_repository
      uses: actions/checkout@v2
    
    # Login to Azure
    - name: Azure Login
      id: azure_login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true
    
    # Deploy Key Vault 001
    - name: Deploy Key Vault 001
      id: key_vault_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_MANAGEMENT }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault001.json
        deploymentMode: Incremental
    
    # Deploy Key Vault 002
    - name: Deploy Key Vault 002
      id: key_vault_002_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault002.json
        deploymentMode: Incremental
    
    # Deploy Key Vault 003
    - name: Deploy Key Vault 003
      id: key_vault_003_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/KeyVault/deploy.keyVault.json
        parameters: ${{ github.workspace }}/infra/KeyVault/params.keyVault003.json
        deploymentMode: Incremental
    
    # # Deploy Integration Service Environment 001
    # - name: Deploy Integration Service Environment 001
    #   id: integration_service_environment_001_deployment
    #   uses: azure/arm-deploy@v1
    #   with:
    #     scope: resourcegroup
    #     subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
    #     region: ${{ env.AZURE_LOCATION }}
    #     template: ${{ github.workspace }}/infra/IntegrationServiceEnvironment/deploy.integrationServiceEnvironment.json
    #     parameters: ${{ github.workspace }}/infra/IntegrationServiceEnvironment/params.integrationServiceEnvironment001.json
    #     deploymentMode: Incremental
    
    # Deploy Logic App 001
    - name: Deploy Logic App 001
      id: logic_app_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/LogicApp/deploy.logicApp.json
        parameters: ${{ github.workspace }}/infra/LogicApp/params.logicApp001.json
        deploymentMode: Incremental
    
    # Deploy Automation Account 001
    - name: Deploy Automation Account 001
      id: automation_account_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_AUTOMATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/AutomationAccount/deploy.automationAccount.json
        parameters: ${{ github.workspace }}/infra/AutomationAccount/params.automationAccount001.json
        deploymentMode: Incremental
    
    # Deploy Purview 001
    - name: Deploy Purview 001
      id: purview_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Purview/deploy.purview.json
        parameters: ${{ github.workspace }}/infra/Purview/params.purview001.json
        deploymentMode: Incremental
    
    # Deploy Log Analytics Workspace 001
    - name: Deploy Log Analytics Workspace 001
      id: log_analytics_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS }}
        region: ${{ env.AZURE_LOCATION }}
        template:  ${{ github.workspace }}/infra/LogAnalytics/deploy.logAnalytics.json
        parameters: ${{ github.workspace }}/infra/LogAnalytics/params.logAnalytics001.json
        deploymentMode: Incremental
    
    # Deploy Storage Account
    - name: Deploy Storage Account 001
      id: storage_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/Storage/deploy.storage.json
        parameters: ${{ github.workspace }}/infra/Storage/params.storage001.json
        deploymentMode: Incremental
    
    # Upload file to Storage Account 001
    - name: Upload file to Storage Account 001
      id: upload_file_001
      uses: azure/powershell@v1
      with:
        azPSVersion: latest
        inlineScript: |
          "Uploading file to Storage Account 001"
          $storageAccount = Get-AzStorageAccount -ResourceGroupName "${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}" -Name "${{ steps.storage_001_deployment.outputs.storageAccountName }}"
          $ctx = $storageAccount.Context
          Set-AzStorageBlobContent -Context $ctx -Container "${{ steps.storage_001_deployment.outputs.storageAccountContainerName }}" -File "infra/SelfHostedIntegrationRuntime/installSHIRGateway.ps1" -Blob "installSHIRGateway.ps1" -Force
    
    # Deploy Data Factory 001
    - name: Deploy Data Factory 001
      id: data_factory_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/DataFactory/deploy.dataFactory.json
        parameters: ${{ github.workspace }}/infra/DataFactory/params.dataFactory001.json
        deploymentMode: Incremental
    
    # Deploy Container Registry 001
    - name: Deploy Container Registry  001
      id: container_registry_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_CONTAINER }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/ContainerRegistry/deploy.containerRegistry.json
        parameters: ${{ github.workspace }}/infra/ContainerRegistry/params.containerRegistry001.json
        deploymentMode: Incremental
    
    # Deploy Synapse Private Link Hub 001
    - name: Deploy Synapse Private Link Hub 001
      id: synapse_private_link_hub_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SynapsePrivateLinkHub/deploy.synapsePrivateLinkHub.json
        parameters: ${{ github.workspace }}/infra/SynapsePrivateLinkHub/params.synapsePrivateLinkHub.json
        deploymentMode: Incremental
    
    # Generate Password
    - name: Generate Password
      id: generate_password_001
      run: |
        echo "Generating Password"
        pwsh $GITHUB_WORKSPACE/code/GeneratePassword.ps1 -GitHub
    
    # Deploy SHIR 001
    - name: Deploy SHIR 001
      id: shir_001_deployment
      uses: azure/arm-deploy@v1
      with:
        scope: resourcegroup
        subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_INTEGRATION }}
        region: ${{ env.AZURE_LOCATION }}
        template: ${{ github.workspace }}/infra/SelfHostedIntegrationRuntime/deploy.shir.json
        parameters: ${{ github.workspace }}/infra/SelfHostedIntegrationRuntime/params.shir001.json vmssAdminPassword="${{ steps.generate_password_001.outputs.password }}"
        deploymentMode: Incremental
    
    # # Deploy Function 001
    # - name: Deploy Function 001
    #   id: function_001_deployment
    #   uses: azure/arm-deploy@v1
    #   with:
    #     scope: resourcegroup
    #     subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_MANAGEMENT }}
    #     region: ${{ env.AZURE_LOCATION }}
    #     template: ${{ github.workspace }}/infra/Function/deploy.function.json
    #     parameters: ${{ github.workspace }}/infra/Function/params.function001.json
    #     deploymentMode: Incremental
    
    # # Deploy Power BI Private Link 001
    # - name: Deploy Power BI Private Link 001
    #   id: power_bi_pl_001_deployment
    #   uses: azure/arm-deploy@v1
    #   with:
    #     scope: resourcegroup
    #     subscriptionId: ${{ env.AZURE_SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
    #     region: ${{ env.AZURE_LOCATION }}
    #     template: ${{ github.workspace }}/infra/PowerBi/deploy.powerBi.json
    #     parameters: ${{ github.workspace }}/infra/PowerBi/params.powerBi001.json
    #     deploymentMode: Incremental
    
    # Log out from Azure
    - name: Log out from Azure
      id: azure_logout
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az logout
