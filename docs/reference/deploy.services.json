{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleAnalyticsCompanyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the prefix (max 5 characters) for all services that will be created"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "northeurope",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "subnetId": {
            "type": "string",
            "defaultValue": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<your-rg-name>/providers/Microsoft.Network/virtualNetworks/<your-vnet-name>/subnets/<your-subnet-name>",
            "metadata": {
                "description": "Specifies the id of the subnet that should be used for non private link private endpoints."
            }
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "defaultValue": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/<your-rg-name>",
            "metadata": {
                "description": "Specifies the ID of the resource group of the private dns zones."
            }
        }
    },
    "functions": [],
    "variables": {
        "enterpriseScaleAnalyticsCompanyPrefix": "[parameters('enterpriseScaleAnalyticsCompanyPrefix')]",
        "location": "[parameters('location')]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneResourceGroupId": "[parameters('privateDnsZoneResourceGroupId')]",
        "privateDnsZoneResourceGroupName": "[last(split(variables('privateDnsZoneResourceGroupId'), '/'))]",
        "governanceResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-governance')]",
        "containerResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-container')]",
        "managementResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-mgmt')]",
        "consumptionResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-consumption')]",
        "purviewRegions": [ "brazilsouth", "eastus", "eastus2", "southeastasia", "westeurope" ],
        "containerRegistryTemplateLink": "https://raw.githubusercontent.com/Azure/data-hub/main/infra/ContainerRegistry/deploy.containerRegistry.json",
        "keyVaultTemplateLink": "https://raw.githubusercontent.com/Azure/data-hub/main/infra/KeyVault/deploy.keyVault.json",
        "purviewTemplateLink": "https://raw.githubusercontent.com/Azure/data-hub/main/infra/Purview/deploy.purview.json",
        "synapsePrivateLinkHubTemplateLink": "https://raw.githubusercontent.com/Azure/data-hub/main/infra/SynapsePrivateLinkHub/deploy.synapsePrivateLinkHub.json"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('governanceResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('containerResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('managementResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('consumptionResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "keyVault001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('governanceResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-keyvault001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 24)]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName'), '/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net')]"
                    }
                }
            },
            "resourceGroup": "[variables('governanceResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "purview001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('governanceResourceGroupName'))]",
                "keyVault001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('purviewTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[if(contains(variables('purviewRegions'), variables('location')), variables('location'), 'westeurope')]"
                    },
                    "purviewName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-purview001'), 63)]"
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    }
                }
            },
            "resourceGroup": "[variables('governanceResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "containerRegistry001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('containerResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('containerRegistryTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "containerRegistryName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), 'dhcontainerregistry001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 50)]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io')]"
                    }
                }
            },
            "resourceGroup": "[variables('containerResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "synapsePrivateLinkHub001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('consumptionResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('synapsePrivateLinkHubTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "synapsePrivateLinkHubName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), 'dhsynapseprivatelinkhub'), 45)]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "privateDnsZoneId": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net')]"
                    }
                }
            },
            "resourceGroup": "[variables('consumptionResourceGroupName')]"
        }
    ],
    "outputs": {}
}