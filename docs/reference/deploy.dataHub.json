{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleAnalyticsCompanyPrefix": {
            "type": "string",
            "maxLength": 5,
            "metadata": {
                "description": "Provide the prefix (max 5 characters) for all services that will be created"
            }
        },
        "enableDnsAndFirewall": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Specifies whether Private DNS zones and Azure Firewall should be deployed."
            }
        },
        "dnsServerAdresses": {
            "type": "array",
            "defaultValue": [
                "10.0.0.4"
            ],
            "metadata": {
                "description": "Specifies a list of internal IP adresses of your DNS forwarders or internal IP address of your Azure Firewall if you have enabled DNS forwarding."
            }
        },
        "firewallPrivateIp": {
            "type": "string",
            "defaultValue": "10.0.0.4",
            "metadata": {
                "description": "Specifies the private IP of your (Azure) Firewall."
            }
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Specifies the ID of the resource group of the private dns zones, if you already have one that should be used."
            }
        }
    },
    "functions": [],
    "variables": {
        "enterpriseScaleAnalyticsCompanyPrefix": "[parameters('enterpriseScaleAnalyticsCompanyPrefix')]",
        "location": "[deployment().location]",
        "dnsServerAdresses": "[parameters('dnsServerAdresses')]",
        "firewallPrivateIp": "[parameters('firewallPrivateIp')]",
        "privateDnsZoneResourceGroupId": "[parameters('privateDnsZoneResourceGroupId')]",
        "enableDnsAndFirewall": "[parameters('enableDnsAndFirewall')]",
        "networkResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-network')]",
        "privateDnsZoneResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-global-dns')]",
        "governanceResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-governance')]",
        "containerResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-container')]",
        "managementResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-mgmt')]",
        "consumptionResourceGroupName": "[concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-consumption')]",
        "purviewRegions": [ "brazilsouth", "eastus", "eastus2", "southeastasia", "westeurope" ],
        "vnetTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/VirtualNetwork/deploy.vnet.json",
        "privateDnsZoneTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/PrivateDns/deploy.privateDns.json",
        "firewallPolicyTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/FirewallPolicy/deploy.firewallPolicy.json",
        "firewallTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/Firewall/deploy.firewall.json",
        "containerRegistryTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/ContainerRegistry/deploy.containerRegistry.json",
        "keyVaultTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/KeyVault/deploy.keyVault.json",
        "purviewTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/Purview/deploy.purview.json",
        "synapsePrivateLinkHubTemplateLink": "https://raw.githubusercontent.com/Azure/data-management-zone/main/infra/SynapsePrivateLinkHub/deploy.synapsePrivateLinkHub.json",
        "privateDnsZoneNames": [
            "privatelink.afs.azure.net",
            "privatelink.analysis.windows.net",
            "privatelink.api.azureml.ms",
            "privatelink.azure-automation.net",
            "privatelink.azure-devices.net",
            "privatelink.azure.com",
            "privatelink.azurecr.io",
            "privatelink.azuredatabricks.net",
            "privatelink.azuresynapse.net",
            "privatelink.azurewebsites.net",
            "privatelink.blob.core.windows.net",
            "privatelink.cassandra.cosmos.azure.com",
            "privatelink.cognitiveservices.azure.com",
            "privatelink.database.windows.net",
            "privatelink.datafactory.azure.net",
            "privatelink.dev.azuresynapse.net",
            "privatelink.dfs.core.windows.net",
            "privatelink.documents.azure.com",
            "privatelink.eventgrid.azure.net",
            "privatelink.file.core.windows.net",
            "privatelink.gremlin.cosmos.azure.com",
            "privatelink.mariadb.database.azure.com",
            "privatelink.mongo.cosmos.azure.com",
            "privatelink.mysql.database.azure.com",
            "privatelink.notebooks.azure.net",
            "privatelink.pbidedicated.windows.net",
            "privatelink.postgres.database.azure.com",
            "privatelink.queue.core.windows.net",
            "privatelink.redis.cache.windows.net",
            "privatelink.search.windows.net",
            "privatelink.service.signalr.net",
            "privatelink.servicebus.windows.net",
            "privatelink.sql.azuresynapse.net",
            "privatelink.table.core.windows.net",
            "privatelink.table.cosmos.azure.com",
            "privatelink.tip1.powerquery.microsoft.com",
            "privatelink.vaultcore.azure.net",
            "privatelink.web.core.windows.net",
            "privatelink.northeurope.azmk8s.io",
            "privatelink.westeurope.azmk8s.io",
            "privatelink.northeurope.batch.azure.com",
            "privatelink.westeurope.batch.azure.com",
            "northeurope.privatelink.redisenterprise.cache.azure.net",
            "westeurope.privatelink.redisenterprise.cache.azure.net"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('networkResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "condition": "[variables('enableDnsAndFirewall')]",
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('privateDnsZoneResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('governanceResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('containerResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('managementResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[variables('consumptionResourceGroupName')]",
            "location": "[variables('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "vnetDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('networkResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "vnetName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-vnet'), 64)]"
                    },
                    "dataHubName": {
                        "value": "dh"
                    },
                    "dnsServerAdresses": {
                        "value": "[variables('dnsServerAdresses')]"
                    },
                    "firewallPrivateIp": {
                        "value": "[variables('firewallPrivateIp')]"
                    }
                }
            },
            "resourceGroup": "[variables('networkResourceGroupName')]"
        },
        {
            "condition": "[variables('enableDnsAndFirewall')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "privateDnsZoneDeployment",
            "dependsOn": [
                "vnetDeployment",
                "[resourceId('Microsoft.Resources/resourceGroups', variables('privateDnsZoneResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('privateDnsZoneTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "privateDnsZoneNames": {
                        "value": "[variables('privateDnsZoneNames')]"
                    },
                    "virtualNetworkId": {
                        "value": "[reference('vnetDeployment').outputs.vnetId.value]"
                    }
                }
            },
            "resourceGroup": "[variables('privateDnsZoneResourceGroupName')]"
        },
        {
            "condition": "[variables('enableDnsAndFirewall')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "firewallPolicy001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('networkResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('firewallPolicyTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "firewallPolicyName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-firewallpolicy'), 80)]"
                    }
                }
            },
            "resourceGroup": "[variables('networkResourceGroupName')]"
        },
        {
            "condition": "[variables('enableDnsAndFirewall')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "firewall001Deployment",
            "dependsOn": [
                "vnetDeployment",
                "firewallPolicy001Deployment",
                "[resourceId('Microsoft.Resources/resourceGroups', variables('networkResourceGroupName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('firewallTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "firewallName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-firewall'), 80)]"
                    },
                    "firewallPolicyId": {
                        "value": "[reference('firewallPolicy001Deployment').outputs.firewallPolicyId.value]"
                    },
                    "subnetId": {
                        "value": "[reference('vnetDeployment').outputs.firewallSubnetId.value]"
                    }
                }
            },
            "resourceGroup": "[variables('networkResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "keyVault001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('governanceResourceGroupName'))]",
                "vnetDeployment",
                "privateDnsZoneDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-keyvault001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 24)]"
                    },
                    "subnetId": {
                        "value": "[reference('vnetDeployment').outputs.privateLinkSubnetId.value]"
                    },
                    "privateDnsZoneId": {
                        "value": "[if(variables('enableDnsAndFirewall'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName'), '/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net'), concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.vaultcore.azure.net'))]"
                    }
                }
            },
            "resourceGroup": "[variables('governanceResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "purview001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('governanceResourceGroupName'))]",
                "vnetDeployment",
                "privateDnsZoneDeployment",
                "keyVault001Deployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('purviewTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[if(contains(variables('purviewRegions'), variables('location')), variables('location'), 'westeurope')]"
                    },
                    "purviewName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), '-dh-purview001'), 63)]"
                    },
                    "keyVaultId": {
                        "value": "[reference('keyVault001Deployment').outputs.keyVaultId.value]"
                    }
                }
            },
            "resourceGroup": "[variables('governanceResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "containerRegistry001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('containerResourceGroupName'))]",
                "vnetDeployment",
                "privateDnsZoneDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('containerRegistryTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "containerRegistryName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), 'dhcontainerregistry001', uniqueString(subscription().subscriptionId, resourceGroup().id)), 50)]"
                    },
                    "subnetId": {
                        "value": "[reference('vnetDeployment').outputs.privateLinkSubnetId.value]"
                    },
                    "privateDnsZoneId": {
                        "value": "[if(variables('enableDnsAndFirewall'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io'), concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azurecr.io'))]"
                    }
                }
            },
            "resourceGroup": "[variables('containerResourceGroupName')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "name": "synapsePrivateLinkHub001Deployment",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('consumptionResourceGroupName'))]",
                "vnetDeployment",
                "privateDnsZoneDeployment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('synapsePrivateLinkHubTemplateLink')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "synapsePrivateLinkHubName": {
                        "value": "[take(concat(variables('enterpriseScaleAnalyticsCompanyPrefix'), 'dhsynapseprivatelinkhub'), 45)]"
                    },
                    "subnetId": {
                        "value": "[reference('vnetDeployment').outputs.privateLinkSubnetId.value]"
                    },
                    "privateDnsZoneId": {
                        "value": "[if(variables('enableDnsAndFirewall'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net'), concat(variables('privateDnsZoneResourceGroupId'), '/providers/Microsoft.Network/privateDnsZones/privatelink.azuresynapse.net'))]"
                    }
                }
            },
            "resourceGroup": "[variables('consumptionResourceGroupName')]"
        }
    ],
    "outputs": {
        "firewallPrivateIp": {
            "type": "string",
            "value": "[if(variables('enableDnsAndFirewall'), reference('firewall001Deployment').outputs.firewallPrivateIp.value, null())]"
        },
        "privateDnsZoneResourceGroupId": {
            "type": "string",
            "value": "[if(variables('enableDnsAndFirewall'), concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', variables('privateDnsZoneResourceGroupName')), variables('privateDnsZoneResourceGroupId'))]"
        }
    }
}