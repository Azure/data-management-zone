name: Network Deployment

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infra/VirtualNetwork/*
      - infra/Firewall/*
      - infra/FirewallPolicy/*
      - infra/VirtualNetworkPeering/*
      - infra/PrivateDns/*
      - infra/DnsForwarder/*
      - .ado/workflows/networkDeployment.yml

variables:
  AZURE_RESOURCE_MANAGER_CONNECTION_NAME: 'Marvins Azure Subscription'
  AZURE_SUBSCRIPTION_ID: '4060c03e-0d2e-44b7-82a3-da9376fe50b2'
  AZURE_RESOURCE_GROUP_NAME_NETWORK: dh-network
  AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS: dh-global-dns
  AZURE_RESOURCE_GROUP_NAME_INTEGRATION: dh-integration
  AZURE_LOCATION: 'North Europe'

stages:
  - stage: Validation
    displayName: 'Validation of ARM templates'
    jobs:
      - job: Validation
        displayName: 'Validation of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
        # Checkout code
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Deploy vnet - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: vnet_validation
          displayName: Deploy vnet - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/deploy.vnet.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/params.vnet.json'
            deploymentMode: 'Validation'
        
        # Deploy storage account 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_001_validation
          displayName: Deploy storage account 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Storage/params.storage001.json'
            deploymentMode: 'Validation'
        
        # Deploy Firewall Policy 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: firewall_policy_validation
          displayName: Deploy Firewall Policy 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/deploy.firewallPolicy.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/params.firewallPolicy001.json'
            deploymentMode: 'Validation'
        
        # Deploy Firewall 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: firewall_validation
          displayName: Deploy Firewall 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Firewall/deploy.firewall.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Firewall/params.firewall001.json'
            deploymentMode: 'Validation'
        
        # Deploy dns forwarder - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: dns_forwarder_validation
          displayName: Deploy dns forwarder - validation
          enabled: false
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/deploy.dnsForwarder.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/params.dnsForwarder001.json'
            deploymentMode: 'Validation'
        
        # Deploy private DNS zones - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: private_dns_zones_validation
          displayName: Deploy private DNS zones - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/PrivateDns/deploy.privateDns.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/PrivateDns/params.privateDns001.json'
            deploymentMode: 'Validation'
        
        # Deploy vnet peering 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: vnet_peering_001_validation
          displayName: Deploy vnet peering 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering001.json'
            deploymentMode: 'Validation'
        
        # Deploy vnet peering 002 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: vnet_peering_002_validation
          displayName: Deploy vnet peering 002 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering002.json'
            deploymentMode: 'Validation'

  - stage: Deployment
    displayName: 'Deployment of ARM templates'
    dependsOn: Validation
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
      - job: Deployment
        displayName: 'Deployment of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'vs2017-win2016'
        
        steps:
        # Checkout repository
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Deploy vnet
        - task: AzureResourceManagerTemplateDeployment@3
          name: vnet_deployment
          displayName: Deploy vnet
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/deploy.vnet.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/params.vnet.json'
            deploymentMode: 'Incremental'
        
        # Deploy storage account 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_001_deployment
          displayName: Deploy storage account 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Storage/deploy.storage.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Storage/params.storage001.json'
            deploymentMode: 'Incremental'
            deploymentOutputs: 'storageDetails'
        
        # Generate Pipeline Variables 001
        - task: AzureCLI@2
          name: generate_pipeline_variables_001
          displayName: Generate Pipeline Variables 001
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/GeneratePipelineVariables.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: false
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -ArmOutputString  '$(storageDetails)'
              -MakeOutput
        
        # Upload file to storage account 001
        - task: AzureFileCopy@3
          name: upload_file_001
          displayName: Upload file to storage account 001
          enabled: true
          continueOnError: false
          inputs:
            sourcePath: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/forwarderSetup.sh'
            additionalArgumentsForBlobCopy: |
              '/Y'
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            destination: AzureBlob
            storage: $(storageAccountName)
            containerName: $(storageAccountContainerName)
        
        # Deploy Firewall Policy 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: firewall_policy_deployment
          displayName: Deploy Firewall Policy 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/deploy.firewallPolicy.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/params.firewallPolicy001.json'
            deploymentMode: 'Incremental'
        
        # Deploy Firewall 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: firewall_deployment
          displayName: Deploy Firewall 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/Firewall/deploy.firewall.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/Firewall/params.firewall001.json'
            deploymentMode: 'Incremental'
        
        # Deploy dns forwarder
        - task: AzureResourceManagerTemplateDeployment@3
          name: dns_forwarder_deployment
          displayName: Deploy dns forwarder
          enabled: false
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/deploy.dnsForwarder.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/params.dnsForwarder001.json'
            deploymentMode: 'Incremental'
        
        # Deploy private DNS zones
        - task: AzureResourceManagerTemplateDeployment@3
          name: private_dns_zones_deployment
          displayName: Deploy private DNS zones
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/PrivateDns/deploy.privateDns.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/PrivateDns/params.privateDns001.json'
            deploymentMode: 'Incremental'
        
        # Deploy vnet peering 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: vnet_peering_001_deployment
          displayName: Deploy vnet peering 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering001.json'
            deploymentMode: 'Incremental'
        
        # Deploy vnet peering 002
        - task: AzureResourceManagerTemplateDeployment@3
          name: vnet_peering_002_deployment
          displayName: Deploy vnet peering 002
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_NETWORK)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json'
            csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering002.json'
            deploymentMode: 'Incremental'
