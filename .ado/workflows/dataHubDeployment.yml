name: Data Hub Deployment

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - code/GeneratePassword.ps1
      - infra/KeyVault/*
      - infra/LogAnalytics/*
      - infra/ContainerRegistry/*
      - infra/SelfHostedIntegrationRuntime/*
      - infra/DataFactory/*
      - infra/Storage/*
      - infra/PowerBi/*
      - .ado/workflows/dataHubDeployment.yml

variables:
  AZURE_RESOURCE_MANAGER_CONNECTION_NAME: 'Marvins Azure Subscription(558bd446-4212-46a2-908c-9ab0a628705e)'
  AZURE_SUBSCRIPTION_ID: '558bd446-4212-46a2-908c-9ab0a628705e'
  AZURE_RESOURCE_GROUP_NAME_MANAGEMENT: dh-mgmt
  AZURE_RESOURCE_GROUP_NAME_INTEGRATION: dh-integration
  AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS: dh-la
  AZURE_RESOURCE_GROUP_NAME_CONSUMPTION: dh-consumption
  AZURE_RESOURCE_GROUP_NAME_CONTAINER: dh-container
  AZURE_RESOURCE_GROUP_NAME_GOVERNANCE: dh-governance
  AZURE_LOCATION: 'North Europe'

stages:
  - stage: Validation
    displayName: 'Validation of ARM templates'
    jobs:
      - job: Validation
        displayName: 'Validation of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'ubuntu-latest'
        
        steps:
        # Checkout code
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Deploy Key Vault 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_001_validation
          displayName: Deploy Key Vault 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_MANAGEMENT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault001.json'
            deploymentMode: 'Validation'
        
        # Deploy Key Vault 002 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_002_validation
          displayName: Deploy Key Vault 002 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault002.json'
            deploymentMode: 'Validation'
        
        # Deploy Key Vault 003 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_003_validation
          displayName: Deploy Key Vault 003 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GOVERNANCE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault003.json'
            deploymentMode: 'Validation'
        
        # Deploy Purview 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: purview_001_validation
          displayName: Deploy Purview 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GOVERNANCE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Purview/deploy.purview.json'
            csmParametersFile: 'infra/Purview/deploy.purview001.json'
            deploymentMode: 'Validation'
        
        # Deploy Log Analytics Workspace 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: log_analytics_001_validation
          displayName: Deploy Log Analytics Workspace 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/LogAnalytics/deploy.logAnalytics.json'
            csmParametersFile: 'infra/LogAnalytics/params.logAnalytics001.json'
            deploymentMode: 'Validation'
        
        # Deploy Storage Account 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_001_validation
          displayName: Deploy Storage Account 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage001.json'
            deploymentMode: 'Validation'
        
        # Deploy data factory 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: data_factory_001_validation
          displayName: Deploy data factory 001 - validation
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/DataFactory/deploy.dataFactory.json'
            csmParametersFile: 'infra/DataFactory/params.dataFactory001.json'
            deploymentMode: 'Validation'
        
        # Deploy Container Registry 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: container_registry_001_validation
          displayName: Deploy Container Registry 001 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_CONTAINER)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/ContainerRegistry/deploy.containerRegistry.json'
            csmParametersFile: 'infra/ContainerRegistry/params.containerRegistry001.json'
            deploymentMode: 'Validation'
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_001
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy SHIR 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: shir_001_validation
          displayName: Deploy SHIR 001 - validation
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SelfHostedIntegrationRuntime/deploy.shir.json'
            csmParametersFile: 'infra/SelfHostedIntegrationRuntime/params.shir001.json'
            deploymentMode: 'Validation'
            overrideParameters: >
              -vmssAdminPassword "$(password)"
        
        # Deploy Function 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: function_001_validation
          displayName: Deploy Function 001 - validation
          enabled: false
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_MANAGEMENT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Function/deploy.function.json'
            csmParametersFile: 'infra/Function/params.function001.json'
            deploymentMode: 'Validation'
        
        # Deploy Power BI Private Link 001 - validation
        - task: AzureResourceManagerTemplateDeployment@3
          name: power_bi_pl_001_validation
          displayName: Deploy Power BI Private Link 001 - validation
          enabled: false
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_CONSUMPTION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/PowerBi/deploy.powerBi.json'
            csmParametersFile: 'infra/PowerBi/params.powerBi001.json'
            deploymentMode: 'Validation'

  - stage: Deployment
    displayName: 'Deployment of ARM templates'
    dependsOn: Validation
    condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
      - job: Deployment
        displayName: 'Deployment of ARM templates'
        continueOnError: false
        pool:
          vmImage: 'vs2017-win2016'
        
        steps:
        # Checkout repository
        - checkout: self
          name: checkout_repository
          displayName: 'Checkout repository'
          submodules: true
          lfs: false
          clean: true
          continueOnError: false
          enabled: true
        
        # Deploy Key Vault 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_001_deployment
          displayName: Deploy Key Vault 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_MANAGEMENT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault001.json'
            deploymentMode: 'Incremental'
        
        # Deploy Key Vault 002
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_002_deployment
          displayName: Deploy Key Vault 002
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault002.json'
            deploymentMode: 'Incremental'
        
        # Deploy Key Vault 003
        - task: AzureResourceManagerTemplateDeployment@3
          name: key_vault_003_deployment
          displayName: Deploy Key Vault 003
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GOVERNANCE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/KeyVault/deploy.keyVault.json'
            csmParametersFile: 'infra/KeyVault/params.keyVault003.json'
            deploymentMode: 'Incremental'
        
        # Deploy Purview 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: purview_001_deployment
          displayName: Deploy Purview 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_GOVERNANCE)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Purview/deploy.purview.json'
            csmParametersFile: 'infra/Purview/deploy.purview001.json'
            deploymentMode: 'Incremental'
        
        # Deploy Log Analytics Workspace 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: log_analytics_001_deployment
          displayName: Deploy Log Analytics Workspace 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_LOGANALYTICS)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/LogAnalytics/deploy.logAnalytics.json'
            csmParametersFile: 'infra/LogAnalytics/params.logAnalytics001.json'
            deploymentMode: 'Incremental'
        
        # Deploy Storage Account 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: storage_account_001_deployment
          displayName: Deploy Storage Account 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Storage/deploy.storage.json'
            csmParametersFile: 'infra/Storage/params.storage001.json'
            deploymentMode: 'Incremental'
            deploymentOutputs: 'storageDetails'
        
        # Generate Pipeline Variables 001
        - task: AzureCLI@2
          name: generate_pipeline_variables_001
          displayName: Generate Pipeline Variables 001
          enabled: true
          continueOnError: false
          inputs:
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            scriptType: pscore
            scriptLocation: 'scriptPath'
            scriptPath: '$(System.DefaultWorkingDirectory)/code/GeneratePipelineVariables.ps1'
            powerShellErrorActionPreference: 'stop'
            addSpnToEnvironment: false
            failOnStandardError: false
            powerShellIgnoreLASTEXITCODE: false
            arguments: >
              -ArmOutputString  '$(storageDetails)'
              -MakeOutput
        
        # Upload file to storage account 001
        - task: AzureFileCopy@3
          name: upload_file_001
          displayName: Upload file to storage account 001
          enabled: true
          continueOnError: false
          inputs:
            sourcePath: 'infra/SelfHostedIntegrationRuntime/gatewayInstall.ps1'
            additionalArgumentsForBlobCopy: |
              '/Y'
            azureSubscription: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            destination: AzureBlob
            storage: $(storageAccountName)
            containerName: $(storageAccountContainerName)
        
        # Deploy data factory 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: data_factory_001_deployment
          displayName: Deploy data factory 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_INTEGRATION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/DataFactory/deploy.dataFactory.json'
            csmParametersFile: 'infra/DataFactory/params.dataFactory001.json'
            deploymentMode: 'Incremental'
        
        # Deploy Container Registry 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: container_registry_001_deployment
          displayName: Deploy Container Registry 001
          enabled: true
          continueOnError: true
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_CONTAINER)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/ContainerRegistry/deploy.containerRegistry.json'
            csmParametersFile: 'infra/ContainerRegistry/params.containerRegistry001.json'
            deploymentMode: 'Incremental'
        
        # Generate Password
        - task: PowerShell@2
          name: generate_password_001
          displayName: Generate Password
          enabled: true
          continueOnError: false
          inputs:
            targetType: 'filePath'
            filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
            errorActionPreference: 'stop'
            failOnStderr: false
            ignoreLASTEXITCODE: false
            pwsh: true
        
        # Deploy shir 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: shir_001_deployment
          displayName: Deploy shir 001
          enabled: true
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_MANAGEMENT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/SelfHostedIntegrationRuntime/deploy.shir.json'
            csmParametersFile: 'infra/SelfHostedIntegrationRuntime/params.shir001.json'
            deploymentMode: 'Incremental'
            overrideParameters: >
              -vmssAdminPassword "$(password)"
        
        # Deploy Function 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: function_001_deployment
          displayName: Deploy Function 001
          enabled: false
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_MANAGEMENT)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/Function/deploy.function.json'
            csmParametersFile: 'infra/Function/params.function001.json'
            deploymentMode: 'Incremental'
        
        # Deploy Power BI Private Link 001
        - task: AzureResourceManagerTemplateDeployment@3
          name: power_bi_pl_001_deployment
          displayName: Deploy Power BI Private Link 001
          enabled: false
          continueOnError: false
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: '$(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)'
            subscriptionId: '$(AZURE_SUBSCRIPTION_ID)'
            action: 'Create Or Update Resource Group'
            resourceGroupName: '$(AZURE_RESOURCE_GROUP_NAME_CONSUMPTION)'
            location: '$(AZURE_LOCATION)'
            templateLocation: 'Linked artifact'
            csmFile: 'infra/PowerBi/deploy.powerBi.json'
            csmParametersFile: 'infra/PowerBi/params.powerBi001.json'
            deploymentMode: 'Validation'
