name: Data Hub Deployment

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infra/ArtifactStorage/*
      - infra/ContainerRegistry/*
      - infra/DnsForwarder/*
      - infra/Firewall/*
      - infra/FirewallPolicy/*
      - infra/KeyVault/*
      - infra/PrivateDns/*
      - infra/Purview/*
      - infra/SynapsePrivateLinkHub/*
      - infra/VirtualNetwork/*
      - infra/VirtualNetworkPeering/*
      - .ado/workflows/dataHubDeployment.yml
      - code/*
pr:
  branches:
    include:
      - main
  paths:
    include:
      - infra/ArtifactStorage/*
      - infra/ContainerRegistry/*
      - infra/DnsForwarder/*
      - infra/Firewall/*
      - infra/FirewallPolicy/*
      - infra/KeyVault/*
      - infra/PrivateDns/*
      - infra/Purview/*
      - infra/SynapsePrivateLinkHub/*
      - infra/VirtualNetwork/*
      - infra/VirtualNetworkPeering/*
      - .ado/workflows/dataHubDeployment.yml
      - code/*

variables:
  AZURE_RESOURCE_MANAGER_CONNECTION_NAME: "data-hub-service-connection" # Update to '{resourceManagerConnectionName}'
  AZURE_SUBSCRIPTION_ID: "4060c03e-0d2e-44b7-82a3-da9376fe50b2"         # Update to '{dataHubSubscriptionId}'
  AZURE_RESOURCE_GROUP_NAME_NETWORK: "dh-network"                       # Update to '{dataHubName}-network'
  AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS: "dh-global-dns"                 # Update to '{dataHubName}-global-dns'
  AZURE_RESOURCE_GROUP_NAME_AUTOMATION: "dh-automation"                 # Update to '{dataHubName}-automation'
  AZURE_RESOURCE_GROUP_NAME_MANAGEMENT: "dh-mgmt"                       # Update to '{dataHubName}-mgmt'
  AZURE_RESOURCE_GROUP_NAME_CONSUMPTION: "dh-consumption"               # Update to '{dataHubName}-consumption'
  AZURE_RESOURCE_GROUP_NAME_CONTAINER: "dh-container"                   # Update to '{dataHubName}-container'
  AZURE_RESOURCE_GROUP_NAME_GOVERNANCE: "dh-governance"                 # Update to '{dataHubName}-governance'
  AZURE_LOCATION: "North Europe"                                        # Update to '{regionName}'
  AZURE_TAGS: '{"CostCenter": "ABCDE-12345", "Owner": "EnterpriseScaleAnalytics"}'

stages:
  - stage: CreateResourceGroups
    displayName: "Create Resource Groups"
    jobs:
      - job: CreateResourceGroups
        displayName: "Create Resource Groups"
        continueOnError: false
        pool:
          vmImage: "ubuntu-latest"

        steps:
          # Checkout code
          - checkout: self
            name: checkout_repository
            displayName: Checkout repository
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Deploy Resource Groups
          - task: AzureResourceManagerTemplateDeployment@3
            name: resource_groups_deployment
            displayName: Deploy Resource Groups
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Subscription"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ResourceGroups/deploy.resourceGroups.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ResourceGroups/params.resourceGroups001.json"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

  - stage: Validation
    displayName: "Validation of ARM templates"
    dependsOn: CreateResourceGroups
    jobs:
      - job: Validation
        displayName: "Validation of ARM templates"
        continueOnError: false
        pool:
          vmImage: "ubuntu-latest"

        steps:
          # Checkout code
          - checkout: self
            name: checkout_repository
            displayName: Checkout repository
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Deploy Vnet - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_validation
            displayName: Deploy Vnet - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/deploy.vnet.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/params.vnet001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Artifact Storage Account 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: artifact_storage_001_validation
            displayName: Deploy Artifact Storage Account 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/deploy.storage.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/params.storage001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Firewall Policy 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: firewall_policy_validation
            displayName: Deploy Firewall Policy 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/deploy.firewallPolicy.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/params.firewallPolicy001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Firewall 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: firewall_validation
            displayName: Deploy Firewall 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Firewall/deploy.firewall.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Firewall/params.firewall001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy DNS Forwarder - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: dns_forwarder_validation
            displayName: Deploy DNS Forwarder - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/DnsForwarder/deploy.dnsForwarder.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/DnsForwarder/params.dnsForwarder001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Private DNS Zones - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: private_dns_zones_validation
            displayName: Deploy Private DNS Zones - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/PrivateDns/deploy.privateDns.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/PrivateDns/params.privateDns001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # # Deploy Vnet Peering 001 - validation - Disabled because it will be handled from the Data Landing Zone for automation purposes
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: vnet_peering_001_validation
          #   displayName: Deploy Vnet Peering 001 - validation
          #   enabled: true
          #   continueOnError: true
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering001.json'
          #     deploymentMode: 'Validation'

          # Deploy Key Vault 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_001_validation
            displayName: Deploy Key Vault 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Container Registry 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: container_registry_001_validation
            displayName: Deploy Container Registry 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_CONTAINER }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ContainerRegistry/deploy.containerRegistry.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ContainerRegistry/params.containerRegistry001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Synapse Private Link Hub 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: synapse_private_link_hub_001_validation
            displayName: Deploy Synapse Private Link Hub 001 - validation
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SynapsePrivateLinkHub/deploy.synapsePrivateLinkHub.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SynapsePrivateLinkHub/params.synapsePrivateLinkHub001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Purview 001 - validation
          - task: AzureResourceManagerTemplateDeployment@3
            name: purview_001_validation
            displayName: Deploy Purview 001 - validation
            enabled: true
            continueOnError: true
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Purview/deploy.purview.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Purview/params.purview001.json"
              deploymentMode: "Validation"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

  - stage: Deployment
    displayName: "Deployment of ARM templates"
    dependsOn: Validation
    # condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
      - job: Deployment
        displayName: "Deployment of ARM templates"
        continueOnError: false
        pool:
          vmImage: "windows-latest"

        steps:
          # Checkout repository
          - checkout: self
            name: checkout_repository
            displayName: "Checkout repository"
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true

          # Deploy Vnet
          - task: AzureResourceManagerTemplateDeployment@3
            name: vnet_deployment
            displayName: Deploy Vnet
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/deploy.vnet.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/VirtualNetwork/params.vnet001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # # Deploy Artifact Storage Account 001
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: artifact_storage_001_deployment
          #   displayName: Deploy Artifact Storage Account 001
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/deploy.storage.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/ArtifactStorage/params.storage001.json'
          #     deploymentMode: 'Incremental'
          #     deploymentOutputs: 'storageDetails'
          #     overrideParameters: >
          #       -tags "${{ variables.AZURE_TAGS }}"

          # # Upload File to Storage Account 001
          # - task: AzurePowerShell@4
          #   name: upload_file_001
          #   displayName: Upload File to Storage Cccount 001
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     azureSubscription: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     scriptType: 'filePath'
          #     scriptPath: '$(System.DefaultWorkingDirectory)/code/UploadBlob.ps1'
          #     scriptArguments:
          #       -ResourceGroupName ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
          #       -StorageAccountName $(storageDetails.storageAccountName.value)
          #       -StorageAccountContainerName $(storageDetails.storageAccountContainerName.value)
          #       -File "$(System.DefaultWorkingDirectory)/infra/DnsForwarder/forwarderSetup.sh"
          #       -Blob "forwarderSetup.sh"
          #     errorActionPreference: 'stop'
          #     failOnStandardError: false
          #     azurePowerShellVersion: 'latestVersion'

          # # Deploy DNS Forwarder 001
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: dns_forwarder_001_deployment
          #   displayName: Deploy DNS Forwarder 001
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/deploy.dnsForwarder.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/DnsForwarder/params.dnsForwarder001.json'
          #     deploymentMode: 'Incremental'
          #     overrideParameters: >
          #       -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Firewall Policy 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: firewall_policy_deployment
            displayName: Deploy Firewall Policy 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/deploy.firewallPolicy.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/FirewallPolicy/params.firewallPolicy001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Firewall 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: firewall_deployment
            displayName: Deploy Firewall 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Firewall/deploy.firewall.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Firewall/params.firewall001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Private DNS Zones
          - task: AzureResourceManagerTemplateDeployment@3
            name: private_dns_zones_deployment
            displayName: Deploy Private DNS Zones
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_GLOBAL_DNS }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/PrivateDns/deploy.privateDns.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/PrivateDns/params.privateDns001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # # Deploy Vnet Peering 001 - Disabled because it will be handled from the Data Landing Zone for automation purposes
          # - task: AzureResourceManagerTemplateDeployment@3
          #   name: vnet_peering_001_deployment
          #   displayName: Deploy Vnet Peering 001
          #   enabled: true
          #   continueOnError: true
          #   inputs:
          #     deploymentScope: 'Resource Group'
          #     azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
          #     subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
          #     action: 'Create Or Update Resource Group'
          #     resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_NETWORK }}
          #     location: ${{ variables.AZURE_LOCATION }}
          #     templateLocation: 'Linked artifact'
          #     csmFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/deploy.vnetPeering.json'
          #     csmParametersFile: '$(System.DefaultWorkingDirectory)/infra/VirtualNetworkPeering/params.vnetPeering001.json'
          #     deploymentMode: 'Incremental'

          # Deploy Key Vault 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: key_vault_001_deployment
            displayName: Deploy Key Vault 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/deploy.keyVault.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/KeyVault/params.keyVault001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Container Registry 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: container_registry_001_deployment
            displayName: Deploy Container Registry 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_CONTAINER }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/ContainerRegistry/deploy.containerRegistry.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/ContainerRegistry/params.containerRegistry001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Synapse Private Link Hub 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: synapse_private_link_hub_001_deployment
            displayName: Deploy Synapse Private Link Hub 001
            enabled: true
            continueOnError: false
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_CONSUMPTION }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/SynapsePrivateLinkHub/deploy.synapsePrivateLinkHub.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/SynapsePrivateLinkHub/params.synapsePrivateLinkHub001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"

          # Deploy Purview 001
          - task: AzureResourceManagerTemplateDeployment@3
            name: purview_001_deployment
            displayName: Deploy Purview 001
            enabled: true
            continueOnError: true
            inputs:
              deploymentScope: "Resource Group"
              azureResourceManagerConnection: ${{ variables.AZURE_RESOURCE_MANAGER_CONNECTION_NAME }}
              subscriptionId: ${{ variables.AZURE_SUBSCRIPTION_ID }}
              action: "Create Or Update Resource Group"
              resourceGroupName: ${{ variables.AZURE_RESOURCE_GROUP_NAME_GOVERNANCE }}
              location: ${{ variables.AZURE_LOCATION }}
              templateLocation: "Linked artifact"
              csmFile: "$(System.DefaultWorkingDirectory)/infra/Purview/deploy.purview.json"
              csmParametersFile: "$(System.DefaultWorkingDirectory)/infra/Purview/params.purview001.json"
              deploymentMode: "Incremental"
              overrideParameters: >
                -tags "${{ variables.AZURE_TAGS }}"
