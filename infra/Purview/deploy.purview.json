{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "purviewName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the purview account."
            }
        },
        "keyVaultId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of the keyvault that should be linked to the data factory."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the id of the subnet which the private endpoint uses."
            }
        },
        "privateDnsZoneIdPurview": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for the purview portal."
            }
        },
        "privateDnsZoneIdBlob": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for blob storage."
            }
        },
        "privateDnsZoneIdQueue": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for queue storage."
            }
        },
        "privateDnsZoneIdNamespace": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the private dns zone for eventhub namespaces."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Specifies tags which should be added to all resources."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "purviewName": "[parameters('purviewName')]",
        "purviewRegions": [ "brazilsouth", "canadacentral", "eastus", "eastus2", "southcentralus", "southeastasia", "westeurope" ],
        "keyVaultId": "[parameters('keyVaultId')]",
        "keyVaultName": "[if(empty(variables('keyVaultId')), 'keyVaultNotSet', last(split(variables('keyVaultId'), '/')))]",
        "keyVaultSubscriptionId": "[if(empty(variables('keyVaultId')), subscription().subscriptionId, split(variables('keyVaultId'), '/')[2])]",
        "keyVaultResourceGroupName": "[if(empty(variables('keyVaultId')), resourceGroup().name, split(variables('keyVaultId'), '/')[4])]",
        "subnetId": "[parameters('subnetId')]",
        "privateDnsZoneIdPurview": "[parameters('privateDnsZoneIdPurview')]",
        "privateDnsZoneIdBlob": "[parameters('privateDnsZoneIdBlob')]",
        "privateDnsZoneIdQueue": "[parameters('privateDnsZoneIdQueue')]",
        "privateDnsZoneIdNamespace": "[parameters('privateDnsZoneIdNamespace')]",
        "tags": "[parameters('tags')]",
        "privateEndpointNamePortal": "[concat(variables('purviewName'), '-portal-private-endpoint')]",
        "privateEndpointNameAccount": "[concat(variables('purviewName'), '-account-private-endpoint')]",
        "privateEndpointNameBlob": "[concat(variables('purviewName'), '-blob-private-endpoint')]",
        "privateEndpointNameQueue": "[concat(variables('purviewName'), '-queue-private-endpoint')]",
        "privateEndpointNameNamespace": "[concat(variables('purviewName'), '-namespace-private-endpoint')]"
    },
    "resources": [
        {
            "type": "Microsoft.Purview/accounts",
            "apiVersion": "2020-12-01-preview",
            "name": "[variables('purviewName')]",
            "tags": "[variables('tags')]",
            "location": "[if(contains(variables('purviewRegions'), variables('location')), variables('location'), 'westeurope')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "sku": {
                "name": "Standard",
                "capacity": 4
            },
            "properties": {
                "friendlyName": "[variables('purviewName')]",
                "publicNetworkAccess": "Disabled",
                "managedResourceGroupName": "[variables('purviewName')]"
            }
        },
        {
            "condition": "[not(empty(variables('keyVaultId')))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "AccessPolicyDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/accessPolicies",
                            "apiVersion": "2019-09-01",
                            "name": "[concat(variables('keyVaultName'), '/add')]",
                            "properties": {
                                "accessPolicies": [
                                    {
                                        "tenantId": "[reference(resourceId('Microsoft.Purview/accounts', variables('purviewName')), '2020-12-01-preview', 'Full').identity.tenantId]",
                                        "objectId": "[reference(resourceId('Microsoft.Purview/accounts', variables('purviewName')), '2020-12-01-preview', 'Full').identity.principalId]",
                                        "permissions": {
                                            "secrets": [
                                                "list",
                                                "get"
                                            ]
                                        }
                                    }
                                ]
                            }
                        }
                    ],
                    "outputs": {}
                }
            },
            "subscriptionId": "[variables('keyVaultSubscriptionId')]",
            "resourceGroup": "[variables('keyVaultResourceGroupName')]"
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNamePortal')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNamePortal')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]",
                            "groupIds": [
                                "portal"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNamePortal'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNamePortal'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNamePortal'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdPurview')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNameAccount')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNameAccount')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]",
                            "groupIds": [
                                "account"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNameAccount'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameAccount'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNameAccount'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdPurview')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNameBlob')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNameBlob')]",
                        "properties": {
                            "privateLinkServiceId": "[reference(resourceId('Microsoft.Purview/accounts', variables('purviewName'))).managedResources.storageAccount]",
                            "groupIds": [
                                "blob"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNameBlob'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameBlob'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNameBlob'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdBlob')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNameQueue')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNameQueue')]",
                        "properties": {
                            "privateLinkServiceId": "[reference(resourceId('Microsoft.Purview/accounts', variables('purviewName'))).managedResources.storageAccount]",
                            "groupIds": [
                                "queue"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNameQueue'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameQueue'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNameQueue'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdQueue')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-05-01",
            "name": "[variables('privateEndpointNameNamespace')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Purview/accounts', variables('purviewName'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[variables('privateEndpointNameNamespace')]",
                        "properties": {
                            "privateLinkServiceId": "[reference(resourceId('Microsoft.Purview/accounts', variables('purviewName'))).managedResources.eventHubNamespace]",
                            "groupIds": [
                                "namespace"
                            ]
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [
                ],
                "subnet": {
                    "id": "[variables('subnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('privateEndpointNameNamespace'), '/aRecord')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', variables('privateEndpointNameNamespace'))]"
            ],
            "location": "[variables('location')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "[concat(variables('privateEndpointNameNamespace'), '-aRecord')]",
                        "properties": {
                            "privateDnsZoneId": "[variables('privateDnsZoneIdNamespace')]"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {}
}