{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "vmssName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the virtual machine scale set."
            }
        },
        "vmssSkuTier": {
            "type": "string",
            "allowedValues": [
                "Standard",
                "Basic"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Specifies the SKU tier of the virtual machine scale set."
            }
        },
        "vmssSkuName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the SKU name of the virtual machine scale set."
            }
        },
        "vmssAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Specifies the admin username of the virtual machine scale set."
            }
        },
        "vmssAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the admin password of the virtual machine scale set."
            }
        },
        "storageAccountContainerId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource id of an existing storage account."
            }
        },
        "storageAccountKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the ID of the existing storage account where the powershell script is stored."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource Id of the subnet to which the virtual machine should connect."
            }
        },
        "powerBiTenantId": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the tenant id of the Power BI Gateway."
            }
        },
        "powerBiGatewayClientId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the client Id of the service principal which will be used for installing the Power BI Gateway."
            }
        },
        "powerBiGatewayClientSecret": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the client secret of the service principal which will be used for installing the Power BI Gateway."
            }
        },
        "powerBiGatewayRecoveryKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the recovery Key of the Power BI Gateway."
            }
        },
        "powerBiGatewayAdminGroupObjectId": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the admin object id that should have admin rights to the Power BI Gateway."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[parameters('location')]",
        "vmssName": "[parameters('vmssName')]",
        "vmssSkuTier": "[parameters('vmssSkuTier')]",
        "vmssSkuName": "[parameters('vmssSkuName')]",
        "vmssAdminUsername": "[parameters('vmssAdminUsername')]",
        "vmssAdminPassword": "[parameters('vmssAdminPassword')]",
        "storageAccountContainerId": "[parameters('storageAccountContainerId')]",
        "storageAccountName": "[split(variables('storageAccountContainerId'), '/')[8]]",
        "storageAccountContainerName": "[last(split(variables('storageAccountContainerId'), '/'))]",
        "storageAccountKey": "[parameters('storageAccountKey')]",
        "subnetId": "[parameters('subnetId')]",
        "powerBiGatewayClientId": "[parameters('powerBiGatewayClientId')]",
        "powerBiGatewayClientSecret": "[parameters('powerBiGatewayClientSecret')]",
        "powerBiGatewayRecoveryKey": "[parameters('powerBiGatewayRecoveryKey')]",
        "powerBiTenantId": "[parameters('powerBiTenantId')]",
        "powerBiGatewayAdminGroupObjectId": "[parameters('powerBiGatewayAdminGroupObjectId')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('vmssName'), '-publicip')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('vmssName'))]"
                },
                // "ddosSettings": {
                //     "protectionCoverage": "Standard",
                //     "protectedIP": true
                // },
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('vmssName'), '-lb')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmssName'), '-publicip'))]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('vmssName'), '-publicip'))]"
                            }
                            // "subnet": {
                            //     "id": "[variables('subnetId')]"
                            // }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat(variables('vmssName'), '-backendPool')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[concat(variables('vmssName'), '-natPool')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', concat(variables('vmssName'), '-lb'), 'loadBalancerFrontEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": 50099,
                            "backendPort": 3389,
                            "idleTimeoutInMinutes": 4
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "ProbeRule",
                        "properties": {
                            "loadDistribution": "Default",
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', concat(variables('vmssName'), '-lb'), 'loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-backendPool'))]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes/', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-probe'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(variables('vmssName'), '-probe')]",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-07-01",
            "name": "[variables('vmssName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', concat(variables('vmssName'), '-lb'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "sku": {
                "name": "[variables('vmssSkuName')]",
                "tier": "[variables('vmssSkuTier')]",
                "capacity": 1
            },
            "zones": [
                "1",
                "2"
            ],
            "properties": {
                "additionalCapabilities": {},
                "automaticRepairsPolicy": {},
                "doNotRunExtensionsOnOverprovisionedVMs": true,
                "overprovision": true,
                "platformFaultDomainCount": 1,
                "zoneBalance": true,
                "scaleInPolicy": {
                    "rules": [
                        "Default"
                    ]
                },
                "singlePlacementGroup": false,
                "upgradePolicy": {
                    "mode": "Automatic"
                    // "automaticOSUpgradePolicy": {
                    //     "disableAutomaticRollback": false,
                    //     "enableAutomaticOSUpgrade": true
                    // }
                },
                "virtualMachineProfile": {
                    "priority": "Regular",
                    "osProfile": {
                        "adminUsername": "[variables('vmssAdminUsername')]",
                        "adminPassword": "[variables('vmssAdminPassword')]",
                        "computerNamePrefix": "[take(variables('vmssName'), 9)]"
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('vmssName'), '-nic')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "dnsSettings": {},
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('vmssName'), '-ipConfig')]",
                                            "properties": {
                                                "primary": true,
                                                "privateIPAddressVersion": "IPv4",
                                                "subnet": {
                                                    "id": "[variables('subnetId')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-backendPool'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-natPool'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "imageReference": {
                            "publisher": "MicrosoftWindowsServer",
                            "offer": "WindowsServer",
                            "sku": "2019-Datacenter",
                            "version": "latest"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "type": "Microsoft.Compute/virtualMachines/extensions",
                                "name": "[concat(parameters('vmssName'),'-installGateway')]",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "type": "CustomScriptExtension",
                                    "typeHandlerVersion": "1.10",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('storageAccountContainerName'), '/installPowerBiGateway.ps1')]"
                                        ]
                                    },
                                    "protectedSettings": {
                                        "storageAccountName": "[variables('storageAccountName')]",
                                        "storageAccountKey": "[variables('storageAccountKey')]",
                                        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File installPowerBiGateway.ps1 -GatewayName \"', variables('vmssName'), '\" -ApplicationId \"', variables('powerBiGatewayClientId'), '\" -ClientSecret \"', variables('powerBiGatewayClientSecret'), '\" -RecoveryKey \"', variables('powerBiGatewayRecoveryKey'), '\" -RegionKey \"', variables('location'), '\" -TenantId \"', variables('powerBiTenantId'), '\" -AdditionalGatewayAdminGroupId \"', variables('powerBiGatewayAdminGroupObjectId'),'\"')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}