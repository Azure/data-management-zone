{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the location for all resources."
            }
        },
        "vmssName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the virtual machine scale set."
            }
        },
        "vmssSkuTier": {
            "type": "string",
            "allowedValues": [
                "Standard",
                "Basic"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Specifies the SKU tier of the virtual machine scale set."
            }
        },
        "vmssSkuName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the SKU name of the virtual machine scale set."
            }
        },
        "vmssAdminUsername": {
            "type": "string",
            "metadata": {
                "description": "Specifies the admin username of the virtual machine scale set."
            }
        },
        // "vmssAdminPublicKey": {  // Uncomment this section if you want to rely on an ssh public key for maintenance of the VMs
        //     "type": "string",
        //     "metadata": {
        //         "description": "Specifies the admin public ssh key of the virtual machine scale set."
        //     }
        // },
        "storageAccountId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ID of the existing storage account where the powershell script is stored."
            }
        },
        "storageAccountContainerName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the storage account container name where the powershell script is stored."
            }
        },
        "subnetId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the resource Id of the subnet to which the virtual machine should connect."
            }
        },
        "tags": {
            "type": "object",
            "defaultValue": {},
            "metadata": {
                "description": "Specifies tags which should be added to all resources."
            }
        }
    },
    "variables": {
        "location": "[parameters('location')]",
        "vmssName": "[parameters('vmssName')]",
        "vmssSkuTier": "[parameters('vmssSkuTier')]",
        "vmssSkuName": "[parameters('vmssSkuName')]",
        "vmssAdminUsername": "[parameters('vmssAdminUsername')]",
        // "vmssAdminPublicKey": "[parameters('vmssAdminPublicKey')]",  // Uncomment this section if you want to rely on an ssh public key for maintenance of the VMs
        "storageAccountId": "[parameters('storageAccountId')]",
        "storageAccountName": "[last(split(variables('storageAccountId'), '/'))]",
        "storageAccountContainerName": "[parameters('storageAccountContainerName')]",
        "subnetId": "[parameters('subnetId')]",
        "tags": "[parameters('tags')]"
    },
    "resources": [
        // {  // Uncomment this section if you want to rely on an ssh public key for maintenance of the VMs
        //     "type": "Microsoft.Compute/sshPublicKeys",
        //     "apiVersion": "2019-12-01",
        //     "name": "[concat(variables('vmssName'), '-sshKey')]",
        //     "location": "[variables('location')]",
        //     "properties": {
        //         "publicKey": "[variables('vmssAdminPublicKey')]"
        //     }
        // },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('vmssName'), '-lb')]",
            "tags": "[variables('tags')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "loadBalancerFrontEnd",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[concat(variables('vmssName'), '-backendPool')]"
                    }
                ],
                "inboundNatPools": [
                    {
                        "name": "[concat(variables('vmssName'), '-natPool')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', concat(variables('vmssName'), '-lb'), 'loadBalancerFrontEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 50000,
                            "frontendPortRangeEnd": 50099,
                            "backendPort": 22,
                            "idleTimeoutInMinutes": 4
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "roundRobinLBRule",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', concat(variables('vmssName'), '-lb'), 'loadBalancerFrontEnd')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-backendPool'))]"
                            },
                            "protocol": "Udp",
                            "frontendPort": 53,
                            "backendPort": 53,
                            "enableFloatingIP": false,
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-probe'))]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "[concat(variables('vmssName'), '-probe')]",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-07-01",
            "name": "[variables('vmssName')]",
            "tags": "[variables('tags')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', concat(variables('vmssName'), '-lb'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "sku": {
                "name": "[variables('vmssSkuName')]",
                "tier": "[variables('vmssSkuTier')]",
                "capacity": 2
            },
            "properties": {
                "additionalCapabilities": {},
                "automaticRepairsPolicy": {},
                "doNotRunExtensionsOnOverprovisionedVMs": true,
                "overprovision": true,
                "platformFaultDomainCount": 1,
                "scaleInPolicy": {
                    "rules": [
                        "Default"
                    ]
                },
                "singlePlacementGroup": true,
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "priority": "Regular",
                    "osProfile": {
                        "computerNamePrefix": "[take(variables('vmssName'), 9)]",
                        "adminUsername": "[variables('vmssAdminUsername')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true
                            // "ssh": {  // Uncomment this section if you want to rely on an ssh public key for maintenance of the VMs
                            //     "publicKeys": [
                            //         {
                            //             "path": "[concat('/home/', variables('vmssAdminUsername'), '/.ssh/authorized_keys')]",
                            //             "keyData": "[reference(resourceId('Microsoft.Compute/sshPublicKeys', concat(variables('vmssName'), '-sshKey')), '2019-12-01').publicKey]"
                            //         }
                            //     ]
                            // }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "[concat(variables('vmssName'), '-nic')]",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "dnsSettings": {},
                                    "enableIPForwarding": false,
                                    "ipConfigurations": [
                                        {
                                            "name": "[concat(variables('vmssName'), '-ipConfig')]",
                                            "properties": {
                                                "primary": true,
                                                "privateIPAddressVersion": "IPv4",
                                                "subnet": {
                                                    "id": "[variables('subnetId')]"
                                                },
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-backendPool'))]"
                                                    }
                                                ],
                                                "loadBalancerInboundNatPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatPools', concat(variables('vmssName'), '-lb'), concat(variables('vmssName'), '-natPool'))]"
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "FromImage",
                            "caching": "ReadWrite"
                        },
                        "imageReference": {
                            "publisher": "Canonical",
                            "offer": "UbuntuServer",
                            "sku": "18.04-LTS",
                            "version": "latest"
                        }
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "[concat(parameters('vmssName'),'-LinuxCustomScriptExtension')]",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.3",
                                    "autoUpgradeMinorVersion": true,
                                    "settings": {
                                        "fileUris": [
                                            "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/', variables('storageAccountContainerName'), '/forwarderSetup.sh')]"
                                        ]
                                    },
                                    "protectedSettings": {
                                        "commandToExecute": "sh forwarderSetup.sh",
                                        "storageAccountName": "[variables('storageAccountName')]",
                                        "storageAccountKey": "[listkeys(variables('storageAccountId'), '2020-08-01-preview').keys[0].value]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ]
}